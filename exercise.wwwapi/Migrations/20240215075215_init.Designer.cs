// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using exercise.wwwapi.Data;

#nullable disable

namespace exercise.wwwapi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240215075215_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CourseStudent", b =>
                {
                    b.Property<int>("CoursesId")
                        .HasColumnType("integer");

                    b.Property<int>("StudentId")
                        .HasColumnType("integer");

                    b.HasKey("CoursesId", "StudentId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentCourses", (string)null);
                });

            modelBuilder.Entity("exercise.wwwapi.DataModels.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<char>("AvgGrade")
                        .HasColumnType("character(1)");

                    b.Property<string>("StartDate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AvgGrade = 'B',
                            StartDate = "2024-8-10",
                            Title = "Mathematics"
                        },
                        new
                        {
                            Id = 2,
                            AvgGrade = 'A',
                            StartDate = "2023-10-15",
                            Title = "History"
                        },
                        new
                        {
                            Id = 3,
                            AvgGrade = 'C',
                            StartDate = "2024-5-7",
                            Title = "Science"
                        },
                        new
                        {
                            Id = 4,
                            AvgGrade = 'B',
                            StartDate = "2022-1-1",
                            Title = "Literature"
                        },
                        new
                        {
                            Id = 5,
                            AvgGrade = 'A',
                            StartDate = "2024-12-24",
                            Title = "Computer Science"
                        });
                });

            modelBuilder.Entity("exercise.wwwapi.DataModels.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("DoB")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DoB = "1995-5-10",
                            FirstName = "John",
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = 2,
                            DoB = "1998-8-15",
                            FirstName = "Alice",
                            LastName = "Smith"
                        },
                        new
                        {
                            Id = 3,
                            DoB = "1997-3-25",
                            FirstName = "Bob",
                            LastName = "Johnson"
                        },
                        new
                        {
                            Id = 4,
                            DoB = "1996-10-5",
                            FirstName = "Emily",
                            LastName = "Brown"
                        },
                        new
                        {
                            Id = 5,
                            DoB = "1999-12-30",
                            FirstName = "Michael",
                            LastName = "Wilson"
                        });
                });

            modelBuilder.Entity("CourseStudent", b =>
                {
                    b.HasOne("exercise.wwwapi.DataModels.Course", null)
                        .WithMany()
                        .HasForeignKey("CoursesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("exercise.wwwapi.DataModels.Student", null)
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
