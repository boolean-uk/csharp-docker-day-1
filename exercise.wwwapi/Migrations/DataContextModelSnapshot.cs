// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using exercise.wwwapi.Data;

#nullable disable

namespace exercise.wwwapi.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("exercise.wwwapi.DataModels.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("AverageGrade")
                        .HasColumnType("double precision")
                        .HasColumnName("averageGrade");

                    b.Property<string>("CourseStartDate")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("courseStartDate");

                    b.Property<string>("CourseTitle")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("courseTitle");

                    b.HasKey("Id");

                    b.ToTable("courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AverageGrade = 1.0,
                            CourseStartDate = "2024, 9, 22",
                            CourseTitle = "Java"
                        },
                        new
                        {
                            Id = 2,
                            AverageGrade = 6.0,
                            CourseStartDate = "2024, 2, 14",
                            CourseTitle = "C#"
                        },
                        new
                        {
                            Id = 3,
                            AverageGrade = 4.0,
                            CourseStartDate = "2024, 6, 28",
                            CourseTitle = ".NET"
                        },
                        new
                        {
                            Id = 4,
                            AverageGrade = 5.0,
                            CourseStartDate = "2024, 9, 22",
                            CourseTitle = "C#"
                        },
                        new
                        {
                            Id = 5,
                            AverageGrade = 2.0,
                            CourseStartDate = "2024, 10, 3",
                            CourseTitle = "Java"
                        },
                        new
                        {
                            Id = 6,
                            AverageGrade = 1.0,
                            CourseStartDate = "2024, 8, 9",
                            CourseTitle = "C#"
                        },
                        new
                        {
                            Id = 7,
                            AverageGrade = 2.0,
                            CourseStartDate = "2024, 8, 9",
                            CourseTitle = "JavaScript"
                        },
                        new
                        {
                            Id = 8,
                            AverageGrade = 4.0,
                            CourseStartDate = "2024, 11, 7",
                            CourseTitle = "JavaScript"
                        },
                        new
                        {
                            Id = 9,
                            AverageGrade = 2.0,
                            CourseStartDate = "2024, 7, 18",
                            CourseTitle = "Java"
                        },
                        new
                        {
                            Id = 10,
                            AverageGrade = 1.0,
                            CourseStartDate = "2024, 6, 28",
                            CourseTitle = "JavaScript"
                        });
                });

            modelBuilder.Entity("exercise.wwwapi.DataModels.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseId")
                        .HasColumnType("integer");

                    b.Property<string>("DateOfBirth")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("dateofbirth");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("firstname");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("lastname");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("student");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 3,
                            DateOfBirth = "1975, 9, 22",
                            FirstName = "Donald",
                            LastName = "Presley"
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 1,
                            DateOfBirth = "1993, 2, 14",
                            FirstName = "Kate",
                            LastName = "Windsor"
                        },
                        new
                        {
                            Id = 3,
                            CourseId = 4,
                            DateOfBirth = "1990, 5, 15",
                            FirstName = "Elvis",
                            LastName = "Windsor"
                        },
                        new
                        {
                            Id = 4,
                            CourseId = 4,
                            DateOfBirth = "1978, 12, 25",
                            FirstName = "Barack",
                            LastName = "Hendrix"
                        },
                        new
                        {
                            Id = 5,
                            CourseId = 3,
                            DateOfBirth = "2005, 11, 7",
                            FirstName = "Oprah",
                            LastName = "Hepburn"
                        },
                        new
                        {
                            Id = 6,
                            CourseId = 2,
                            DateOfBirth = "1982, 7, 18",
                            FirstName = "Jimi",
                            LastName = "Jagger"
                        },
                        new
                        {
                            Id = 7,
                            CourseId = 3,
                            DateOfBirth = "1970, 6, 28",
                            FirstName = "Jimi",
                            LastName = "Winfrey"
                        },
                        new
                        {
                            Id = 8,
                            CourseId = 2,
                            DateOfBirth = "1975, 9, 22",
                            FirstName = "Mick",
                            LastName = "Winslet"
                        },
                        new
                        {
                            Id = 9,
                            CourseId = 4,
                            DateOfBirth = "1996, 4, 30",
                            FirstName = "Charles",
                            LastName = "Windsor"
                        },
                        new
                        {
                            Id = 10,
                            CourseId = 2,
                            DateOfBirth = "1985, 10, 3",
                            FirstName = "Charles",
                            LastName = "Windsor"
                        });
                });

            modelBuilder.Entity("exercise.wwwapi.DataModels.Student", b =>
                {
                    b.HasOne("exercise.wwwapi.DataModels.Course", "Course")
                        .WithMany("Students")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("exercise.wwwapi.DataModels.Course", b =>
                {
                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
