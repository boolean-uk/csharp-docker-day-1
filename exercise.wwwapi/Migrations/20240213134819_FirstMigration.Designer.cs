// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using exercise.wwwapi.Data;

#nullable disable

namespace exercise.wwwapi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240213134819_FirstMigration")]
    partial class FirstMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("exercise.wwwapi.DataModels.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("course_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CourseStartDate")
                        .HasColumnType("Date")
                        .HasColumnName("start_date_course");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("course_title");

                    b.HasKey("Id");

                    b.ToTable("course");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseStartDate = new DateTime(2024, 2, 13, 14, 48, 17, 872, DateTimeKind.Local).AddTicks(5199),
                            Title = "Naturdag"
                        },
                        new
                        {
                            Id = 2,
                            CourseStartDate = new DateTime(2024, 2, 13, 14, 48, 17, 872, DateTimeKind.Local).AddTicks(5287),
                            Title = "Matte"
                        },
                        new
                        {
                            Id = 3,
                            CourseStartDate = new DateTime(2024, 2, 13, 14, 48, 17, 872, DateTimeKind.Local).AddTicks(5290),
                            Title = "Fargerer"
                        },
                        new
                        {
                            Id = 4,
                            CourseStartDate = new DateTime(2024, 2, 13, 14, 48, 17, 872, DateTimeKind.Local).AddTicks(5294),
                            Title = "Kjeddeeeelig"
                        });
                });

            modelBuilder.Entity("exercise.wwwapi.DataModels.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("student_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("AverageGrade")
                        .HasColumnType("double precision")
                        .HasColumnName("average_grade");

                    b.Property<int>("CourseId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DoB")
                        .HasColumnType("Date")
                        .HasColumnName("dob");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("last_name");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("student");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AverageGrade = 2.2000000000000002,
                            CourseId = 1,
                            DoB = new DateTime(1998, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Idaa",
                            LastName = "KK"
                        },
                        new
                        {
                            Id = 2,
                            AverageGrade = 4.0999999999999996,
                            CourseId = 1,
                            DoB = new DateTime(2002, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "DEW",
                            LastName = "KK"
                        },
                        new
                        {
                            Id = 3,
                            AverageGrade = 6.0,
                            CourseId = 2,
                            DoB = new DateTime(2022, 4, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Olkeee",
                            LastName = "Bes"
                        },
                        new
                        {
                            Id = 4,
                            AverageGrade = 5.5,
                            CourseId = 3,
                            DoB = new DateTime(2002, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "BAAAA",
                            LastName = "Vor AD"
                        });
                });

            modelBuilder.Entity("exercise.wwwapi.DataModels.Student", b =>
                {
                    b.HasOne("exercise.wwwapi.DataModels.Course", "Course")
                        .WithMany("Students")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("exercise.wwwapi.DataModels.Course", b =>
                {
                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
