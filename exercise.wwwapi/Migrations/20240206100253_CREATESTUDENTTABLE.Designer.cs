// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using exercise.wwwapi.Data;

#nullable disable

namespace exercise.wwwapi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240206100253_CREATESTUDENTTABLE")]
    partial class CREATESTUDENTTABLE
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("exercise.wwwapi.DataModels.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AverageGrade")
                        .HasColumnType("integer")
                        .HasColumnName("average_grade");

                    b.Property<string>("CourseStartDate")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("course_start_date");

                    b.Property<string>("CourseTitle")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("course_title");

                    b.Property<string>("DateOfBirth")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("date_of_birth");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("last_name");

                    b.HasKey("Id");

                    b.ToTable("students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AverageGrade = 4,
                            CourseStartDate = "2024/05/13",
                            CourseTitle = "Fundamentals of Csharp",
                            DateOfBirth = "1994/02/07",
                            FirstName = "Joel",
                            LastName = "Joelsson"
                        },
                        new
                        {
                            Id = 2,
                            AverageGrade = 5,
                            CourseStartDate = "2024/03/20",
                            CourseTitle = "Advanced Data Structures",
                            DateOfBirth = "1993/08/15",
                            FirstName = "Anna",
                            LastName = "Andersson"
                        },
                        new
                        {
                            Id = 3,
                            AverageGrade = 3,
                            CourseStartDate = "2024/04/10",
                            CourseTitle = "Machine Learning Fundamentals",
                            DateOfBirth = "1995/11/21",
                            FirstName = "David",
                            LastName = "Davidsson"
                        },
                        new
                        {
                            Id = 4,
                            AverageGrade = 2,
                            CourseStartDate = "2024/06/01",
                            CourseTitle = "Web Development Basics",
                            DateOfBirth = "1992/06/30",
                            FirstName = "Emma",
                            LastName = "Emilsson"
                        },
                        new
                        {
                            Id = 5,
                            AverageGrade = 5,
                            CourseStartDate = "2024/02/15",
                            CourseTitle = "Introduction to Algorithms",
                            DateOfBirth = "1996/09/18",
                            FirstName = "Erik",
                            LastName = "Eriksson"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
