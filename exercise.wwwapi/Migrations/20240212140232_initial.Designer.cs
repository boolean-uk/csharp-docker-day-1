// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using exercise.wwwapi.Data;

#nullable disable

namespace exercise.wwwapi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240212140232_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("exercise.wwwapi.DataModels.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("exercise.wwwapi.DataModels.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Student_Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<float>("Average_Grade")
                        .HasColumnType("real")
                        .HasColumnName("Average_Grade");

                    b.Property<string>("Course_Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Course_Title");

                    b.Property<DateTime>("Date_Of_Birth")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("Date_Of_Birth");

                    b.Property<string>("First_Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("First_Name");

                    b.Property<string>("Last_Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Last_Name");

                    b.Property<DateTime>("Start_Date_For_Course")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("Start_Date_For_Course");

                    b.HasKey("Id");

                    b.ToTable("Student");
                });
#pragma warning restore 612, 618
        }
    }
}
