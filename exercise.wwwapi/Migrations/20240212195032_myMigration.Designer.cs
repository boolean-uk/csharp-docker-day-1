// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using exercise.wwwapi.Data;

#nullable disable

namespace exercise.wwwapi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240212195032_myMigration")]
    partial class myMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("exercise.wwwapi.DataModels.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("StartDate")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("start_date");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("Id");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            StartDate = "2024-01-01",
                            Title = "Music"
                        },
                        new
                        {
                            Id = 2,
                            StartDate = "2024-01-01",
                            Title = "Math"
                        },
                        new
                        {
                            Id = 3,
                            StartDate = "2024-01-01",
                            Title = "Programming"
                        },
                        new
                        {
                            Id = 4,
                            StartDate = "2024-01-01",
                            Title = "Art"
                        });
                });

            modelBuilder.Entity("exercise.wwwapi.DataModels.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AvrageGrade")
                        .HasColumnType("integer")
                        .HasColumnName("avrage_grade");

                    b.Property<int>("CourseId")
                        .HasColumnType("integer")
                        .HasColumnName("course_id");

                    b.Property<string>("DateOfBirth")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("date_of_birth");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("last_name");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AvrageGrade = 5,
                            CourseId = 1,
                            DateOfBirth = "1992-01-01",
                            FirstName = "A",
                            LastName = "Aa"
                        },
                        new
                        {
                            Id = 2,
                            AvrageGrade = 4,
                            CourseId = 1,
                            DateOfBirth = "1992-02-02",
                            FirstName = "B",
                            LastName = "Bb"
                        },
                        new
                        {
                            Id = 3,
                            AvrageGrade = 3,
                            CourseId = 2,
                            DateOfBirth = "1992-03-03",
                            FirstName = "C",
                            LastName = "Cc"
                        },
                        new
                        {
                            Id = 4,
                            AvrageGrade = 2,
                            CourseId = 2,
                            DateOfBirth = "1992-04-04",
                            FirstName = "D",
                            LastName = "Dd"
                        },
                        new
                        {
                            Id = 5,
                            AvrageGrade = 5,
                            CourseId = 3,
                            DateOfBirth = "1992-01-01",
                            FirstName = "E",
                            LastName = "Aa"
                        },
                        new
                        {
                            Id = 6,
                            AvrageGrade = 4,
                            CourseId = 3,
                            DateOfBirth = "1992-02-02",
                            FirstName = "F",
                            LastName = "Bb"
                        },
                        new
                        {
                            Id = 7,
                            AvrageGrade = 3,
                            CourseId = 4,
                            DateOfBirth = "1992-03-03",
                            FirstName = "G",
                            LastName = "Cc"
                        },
                        new
                        {
                            Id = 8,
                            AvrageGrade = 2,
                            CourseId = 4,
                            DateOfBirth = "1992-04-04",
                            FirstName = "H",
                            LastName = "Dd"
                        });
                });

            modelBuilder.Entity("exercise.wwwapi.DataModels.Student", b =>
                {
                    b.HasOne("exercise.wwwapi.DataModels.Course", "Course")
                        .WithMany("Students")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("exercise.wwwapi.DataModels.Course", b =>
                {
                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
